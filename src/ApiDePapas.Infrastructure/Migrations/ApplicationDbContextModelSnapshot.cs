// <auto-generated />
using System;
using ApiDePapas.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiDePapas.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApiDePapas.Domain.Entities.DistributionCenter", b =>
                {
                    b.Property<int>("distribution_center_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("distribution_center_id"));

                    b.HasKey("distribution_center_id");

                    b.ToTable("DistributionCenters");
                });

            modelBuilder.Entity("ApiDePapas.Domain.Entities.ShippingDetail", b =>
                {
                    b.Property<int>("shipping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("shipping_id"));

                    b.Property<string>("carrier_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("distribution_center_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("estimated_delivery_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<float>("total_cost")
                        .HasColumnType("float");

                    b.Property<string>("tracking_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("transport_method_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("shipping_id");

                    b.HasIndex("distribution_center_id");

                    b.HasIndex("transport_method_id");

                    b.ToTable("Shippings");
                });

            modelBuilder.Entity("ApiDePapas.Domain.Entities.TransportMethod", b =>
                {
                    b.Property<int>("transport_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("transport_id"));

                    b.Property<bool>("available")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("average_speed")
                        .HasColumnType("float");

                    b.Property<float>("max_capacity")
                        .HasColumnType("float");

                    b.HasKey("transport_id");

                    b.ToTable("TransportMethods");
                });

            modelBuilder.Entity("ApiDePapas.Domain.Entities.DistributionCenter", b =>
                {
                    b.OwnsOne("ApiDePapas.Domain.Entities.Address", "distribution_center_address", b1 =>
                        {
                            b1.Property<int>("DistributionCenterdistribution_center_id")
                                .HasColumnType("int");

                            b1.Property<string>("city")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "city");

                            b1.Property<string>("country")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "country");

                            b1.Property<string>("postal_code")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "postal_code");

                            b1.Property<string>("state")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "state");

                            b1.Property<string>("street")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "street");

                            b1.HasKey("DistributionCenterdistribution_center_id");

                            b1.ToTable("DistributionCenters");

                            b1.WithOwner()
                                .HasForeignKey("DistributionCenterdistribution_center_id");
                        });

                    b.Navigation("distribution_center_address")
                        .IsRequired();
                });

            modelBuilder.Entity("ApiDePapas.Domain.Entities.ShippingDetail", b =>
                {
                    b.HasOne("ApiDePapas.Domain.Entities.DistributionCenter", null)
                        .WithMany()
                        .HasForeignKey("distribution_center_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiDePapas.Domain.Entities.TransportMethod", null)
                        .WithMany()
                        .HasForeignKey("transport_method_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("ApiDePapas.Domain.Entities.ProductQty", "products", b1 =>
                        {
                            b1.Property<int>("ShippingDetailshipping_id")
                                .HasColumnType("int");

                            b1.Property<int>("id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("Relational:JsonPropertyName", "product_id");

                            MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b1.Property<int>("id"));

                            b1.Property<int>("quantity")
                                .HasColumnType("int")
                                .HasAnnotation("Relational:JsonPropertyName", "quantity");

                            b1.HasKey("ShippingDetailshipping_id", "id");

                            b1.ToTable("ProductQty");

                            b1.WithOwner()
                                .HasForeignKey("ShippingDetailshipping_id");
                        });

                    b.OwnsOne("ApiDePapas.Domain.Entities.Address", "delivery_address", b1 =>
                        {
                            b1.Property<int>("ShippingDetailshipping_id")
                                .HasColumnType("int");

                            b1.Property<string>("city")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "city");

                            b1.Property<string>("country")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "country");

                            b1.Property<string>("postal_code")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "postal_code");

                            b1.Property<string>("state")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "state");

                            b1.Property<string>("street")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "street");

                            b1.HasKey("ShippingDetailshipping_id");

                            b1.ToTable("Shippings");

                            b1.WithOwner()
                                .HasForeignKey("ShippingDetailshipping_id");
                        });

                    b.OwnsOne("ApiDePapas.Domain.Entities.Address", "departure_address", b1 =>
                        {
                            b1.Property<int>("ShippingDetailshipping_id")
                                .HasColumnType("int");

                            b1.Property<string>("city")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "city");

                            b1.Property<string>("country")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "country");

                            b1.Property<string>("postal_code")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "postal_code");

                            b1.Property<string>("state")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "state");

                            b1.Property<string>("street")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "street");

                            b1.HasKey("ShippingDetailshipping_id");

                            b1.ToTable("Shippings");

                            b1.WithOwner()
                                .HasForeignKey("ShippingDetailshipping_id");
                        });

                    b.OwnsMany("ApiDePapas.Domain.Entities.ShippingLog", "logs", b1 =>
                        {
                            b1.Property<int>("ShippingDetailshipping_id")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Message")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasAnnotation("Relational:JsonPropertyName", "message");

                            b1.Property<int?>("Status")
                                .HasColumnType("int")
                                .HasAnnotation("Relational:JsonPropertyName", "status");

                            b1.Property<DateTime?>("Timestamp")
                                .HasColumnType("datetime(6)")
                                .HasAnnotation("Relational:JsonPropertyName", "timestamp");

                            b1.HasKey("ShippingDetailshipping_id", "Id");

                            b1.ToTable("ShippingLog");

                            b1.WithOwner()
                                .HasForeignKey("ShippingDetailshipping_id");
                        });

                    b.Navigation("delivery_address")
                        .IsRequired();

                    b.Navigation("departure_address")
                        .IsRequired();

                    b.Navigation("logs");

                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
